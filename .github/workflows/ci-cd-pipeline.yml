name: QTEC Website Testing CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - smoke
        - functional
        - ui-ux
        - responsive
        - performance
        - accessibility
        - cross-browser

env:
  NODE_VERSION: '18'
  QTEC_STAGING_URL: 'https://staging.qtecsolution.com'
  QTEC_PROD_URL: 'https://qtecsolution.com'

jobs:
  # Lint and Type Check
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

  # Install Playwright Browsers
  install-browsers:
    name: Install Playwright Browsers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npm run install:browsers

  # Run Tests
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, install-browsers]
    strategy:
      matrix:
        test-type: 
          - smoke
          - functional
          - ui-ux
          - responsive
          - performance
          - accessibility
          - cross-browser
        browser: [chromium, firefox, webkit]
        include:
          - test-type: smoke
            browser: chromium
          - test-type: functional
            browser: chromium
          - test-type: ui-ux
            browser: chromium
          - test-type: responsive
            browser: chromium
          - test-type: performance
            browser: chromium
          - test-type: accessibility
            browser: chromium
          - test-type: cross-browser
            browser: chromium
          - test-type: cross-browser
            browser: firefox
          - test-type: cross-browser
            browser: webkit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npm run install:browsers

      - name: Run ${{ matrix.test-type }} tests on ${{ matrix.browser }}
        run: |
          npm run test:${{ matrix.test-type }}
        env:
          BROWSER: ${{ matrix.browser }}
          QTEC_URL: ${{ env.QTEC_STAGING_URL }}
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.test-type }}-${{ matrix.browser }}
          path: |
            test-results/
            allure-results/
            cucumber-report.html
            cucumber-report.json
          retention-days: 30

  # Generate Reports
  generate-reports:
    name: Generate Test Reports
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts

      - name: Merge test results
        run: |
          mkdir -p merged-results
          find test-artifacts -name "allure-results" -type d -exec cp -r {}/. merged-results/ \;
          find test-artifacts -name "test-results" -type d -exec cp -r {}/. merged-results/ \;

      - name: Generate Allure report
        run: |
          npm run report:generate
        continue-on-error: true

      - name: Generate Cucumber report
        run: |
          npm run test:format
        continue-on-error: true

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report/
          retention-days: 90

      - name: Upload Cucumber report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-report
          path: |
            cucumber-report.html
            cucumber-report.json
          retention-days: 90

  # Deploy Reports
  deploy-reports:
    name: Deploy Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: [generate-reports]
    if: github.ref == 'refs/heads/main' && always()
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Download Cucumber report
        uses: actions/download-artifact@v4
        with:
          name: cucumber-report
          path: cucumber-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create reports directory structure
        run: |
          mkdir -p public
          cp -r allure-report/* public/
          cp cucumber-report/* public/

      - name: Create index.html
        run: |
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>QTEC Website Testing Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .report-link { display: block; margin: 20px 0; padding: 15px; 
                                background: #f5f5f5; border-radius: 5px; text-decoration: none; 
                                color: #333; }
                  .report-link:hover { background: #e0e0e0; }
                  h1 { color: #2c3e50; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>QTEC Website Testing Reports</h1>
                  <p>Latest test execution reports for QTEC website testing suite.</p>
                  
                  <a href="index.html" class="report-link">
                      ðŸ“Š Allure Test Report
                  </a>
                  
                  <a href="cucumber-report.html" class="report-link">
                      ðŸ¥’ Cucumber Test Report
                  </a>
                  
                  <p><small>Generated on: $(date)</small></p>
              </div>
          </body>
          </html>
          EOF

      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notify Results
  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [generate-reports]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: cucumber-report
          path: test-results

      - name: Parse test results
        id: parse-results
        run: |
          if [ -f test-results/cucumber-report.json ]; then
            TOTAL_TESTS=$(jq '.[].elements | length' test-results/cucumber-report.json | awk '{sum+=$1} END {print sum}')
            PASSED_TESTS=$(jq '.[].elements[].steps[] | select(.result.status == "passed") | .result.status' test-results/cucumber-report.json | wc -l)
            FAILED_TESTS=$(jq '.[].elements[].steps[] | select(.result.status == "failed") | .result.status' test-results/cucumber-report.json | wc -l)
            
            echo "total=$TOTAL_TESTS" >> $GITHUB_OUTPUT
            echo "passed=$PASSED_TESTS" >> $GITHUB_OUTPUT
            echo "failed=$FAILED_TESTS" >> $GITHUB_OUTPUT
          else
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
          fi

      - name: Create test summary
        run: |
          echo "## ðŸ§ª QTEC Website Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Execution Summary:**" >> $GITHUB_STEP_SUMMARY
          echo "- Total Tests: ${{ steps.parse-results.outputs.total }}" >> $GITHUB_STEP_SUMMARY
          echo "- Passed: ${{ steps.parse-results.outputs.passed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Failed: ${{ steps.parse-results.outputs.failed }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Reports:**" >> $GITHUB_STEP_SUMMARY
          echo "- [Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
          echo "- [Cucumber Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/cucumber-report.html)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
